@page "/createrule/{RuleType}"
@inject IRules rules
@inject SingletonServices singleton
@inject NavigationManager navigationManager

<h3>New @RuleType Rule</h3>

@if (ruleInfo != null)
{
    <NewRuleForm RuleToEdit="ruleModel" DataRef="ruleInfo" Type="@type" OnValidSubmit="Create" FunctionMethods="functionMethods"/>
}

@code {
    [Parameter] public string RuleType { get; set; }
    public RuleModel ruleModel = new RuleModel();
    public RuleInfo ruleInfo;
    List<RuleFunctions> FunctionList;
    public string type;
    public List<string> functionMethods;

    protected override async Task OnInitializedAsync()
    {
        ruleInfo = await rules.GetRuleInfo(singleton.TargetConnector);
        FunctionList = await rules.GetFunctions(singleton.TargetConnector);
        type = RuleType;
        Console.WriteLine($"New Rule: {type}");
        string shortType = "";
        if (type == "Validity") shortType = "V";
        if (type == "Predictions") shortType = "P";
        functionMethods = FunctionList.Where(s => s.FunctionType == shortType).Select(s => s.FunctionName).ToList();
    }

    private async Task Create()
    {
        try
        {
            await rules.InsertRule(ruleModel, singleton.TargetConnector);
            navigationManager.NavigateTo("rules");
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }
}
