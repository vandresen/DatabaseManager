<EditForm Model="RuleFunctions" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label>Function Name:</label>
        <div>
            <InputText class="form-control" @bind-Value="@RuleFunctions.FunctionName" readonly="@ReadOnlyName" />
            <ValidationMessage For="@(() => RuleFunctions.FunctionName)" />
        </div>
    </div>
    <div class="form-group">
        <label>Function Type:</label>
        <div>
            <select class="form-control selectpicker" @bind="RuleFunctions.FunctionType">
                <option>--select--</option>
                @foreach (var item in typeOptions)
                {
                    <option value="@item.Id">@item.Type</option>
                }
            </select>
        </div>
    </div>
    <div class="form-group">
        <label>Function URL:</label>
        <div>
            <InputText class="form-control" @bind-Value="@RuleFunctions.FunctionUrl" />
            <ValidationMessage For="@(() => RuleFunctions.FunctionUrl)" />
        </div>
    </div>
    <div class="form-group">
        <label>Function Key:</label>
        <div>
            <InputText class="form-control" @bind-Value="@RuleFunctions.FunctionKey" />
            <ValidationMessage For="@(() => RuleFunctions.FunctionKey)" />
        </div>
    </div>

    <button class="btn btn-success" type="submit">Save Changes</button>
</EditForm>

@code {
    [Parameter] public RuleFunctions RuleFunctions { get; set; }
    [Parameter] public EventCallback OnValidSubmit { get; set; }
    [Parameter] public bool ReadOnlyName { get; set; }
    private List<string> FunctionTypeOptions = new List<string> { "None", "Validity", "Predictions"};
    public List<FunctionTypeOption> typeOptions;

    protected override void OnInitialized()
    {
        typeOptions = new List<FunctionTypeOption>()
        {
            new FunctionTypeOption(){Id = "", Type = "None"},
            new FunctionTypeOption(){Id = "V", Type = "Validity"},
            new FunctionTypeOption(){Id = "P", Type = "Predictions"}
        };
    }
}