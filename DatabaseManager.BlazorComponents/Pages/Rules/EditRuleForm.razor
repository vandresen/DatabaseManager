<EditForm Model="RuleToEdit" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label>Rule Name:</label>
        <div>
            <InputText class="form-control" @bind-Value="RuleToEdit.RuleName" />
            <ValidationMessage For="@(() => RuleToEdit.RuleName)" />
        </div>
    </div>

    @if (dataAttributeMenu)
    {
        <div class="form-group">
            <label>Data Attribute:</label>
            <select @bind="RuleToEdit.DataAttribute">
                @foreach (var option in DataAttributeOptions)
                {
                    <option>@option</option>
                }
            </select>
        </div>
    }

    <div class="form-group">
        <label>Rule Parameters:</label>
        <div>
            <InputText class="form-control" @bind-Value="@RuleToEdit.RuleParameters" />
            <ValidationMessage For="@(() => RuleToEdit.RuleParameters)" />
        </div>
    </div>
    <div class="form-group">
        <label>Rule Filter:</label>
        <div>
            <InputText class="form-control" @bind-Value="@RuleToEdit.RuleFilter" />
            <ValidationMessage For="@(() => RuleToEdit.RuleFilter)" />
        </div>
    </div>
    @if (type == "Predictions")
    {
        <div class="form-group">
            <label>Fail Rule:</label>
            <div>
                <InputText class="form-control" @bind-Value="RuleToEdit.FailRule" />
                <ValidationMessage For="@(() => RuleToEdit.FailRule)" />
            </div>
        </div>
        <div class="form-group">
            <label>Prediction Order:</label>
            <div>
                <InputNumber class="form-control" @bind-Value="RuleToEdit.PredictionOrder" />
                <ValidationMessage For="@(() => RuleToEdit.PredictionOrder)" />
            </div>
        </div>
    }
    <div class="form-group">
        <label>Description:</label>
        <div>
            <InputText class="form-control" @bind-Value="@RuleToEdit.RuleDescription" />
            <ValidationMessage For="@(() => RuleToEdit.RuleDescription)" />
        </div>
    </div>
    <div>
        <label>Active:</label>
        <select @bind="@RuleToEdit.Active">
            <option value="Y">Y</option>
            <option value="N">N</option>
        </select>
    </div>
    <button class="btn btn-success" type="submit">Save Changes</button>

</EditForm>

@code {
    [Parameter] public RuleModel RuleToEdit { get; set; }
    [Parameter] public RuleInfo DataRef { get; set; }
    [Parameter] public EventCallback OnValidSubmit { get; set; }
    private List<string> DataAttributeOptions;
    private bool dataAttributeMenu = true;
    private string type;

    protected override void OnInitialized()
    {
        DataAttributeOptions = GetAttributes(DataRef.DataAttributes[RuleToEdit.DataType]);
        type = RuleToEdit.RuleType;
        if (type == "Predictions" || type == "Entirety" || type == "Uniqueness") dataAttributeMenu = false;
    }

    private List<string> GetAttributes(string attributeList)
    {
        List<string> attributes = attributeList.Split(',').ToList();
        return attributes;
    }
}