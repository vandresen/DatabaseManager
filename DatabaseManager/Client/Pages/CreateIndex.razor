@page "/createindex"
@inject ICreateIndex createIndex
@inject SingletonServices singleton
@inject IDisplayMessage displayMessage
@inject NavigationManager navigationManager
@inject DatabaseManager.Common.Services.IDataSources dataSources

<h2>Create Index</h2>

@if (taxonomies == null)
{
    <text>Loading...</text>
}
else
{
    <GenericSelector Options="taxonomies" Selection="Selected" Label="Choose Taxonomy" />
}

<div class="row">
    <div class="col">
        <h3>Source Database</h3>
    </div>
    <div class="col">
        <h3></h3>
    </div>
    <div class="col">
        <h3>Target Database</h3>
    </div>
</div>

<div class="row">
    <div class="col">
        @if (options == null)
        {
            <text>Loading...</text>
        }
        else
        {
            <ConnectorSelectorWithDefault Options="options" DefaultSource="@source" SelectedConnector="SelectedSource" />
        }
    </div>
    <div class="col">
        <button class="btn btn-success" @onclick="StartIndex">Start Indexing >>></button>
    </div>
    <div class="col">
        <p>Target Database: @singleton.TargetConnector</p>
    </div>
</div>

<div>
    <ProgressBar ValueNow="barValue" />
</div>

<div>
    <p>Current status: @statusMessage</p>
</div>

@code {
    private List<string> options { get; set; } = new List<string>();
    private string source { get; set; } = "Choose Connector";
    List<string> taxonomies;
    CreateIndexParameters iParameters = new CreateIndexParameters();
    private string statusMessage = "Not started";
    private string TaxonomyFile = "";
    public int barValue = 0;
    List<ConnectParameters> connectParameters;

    protected override async Task OnInitializedAsync()
    {
        if (string.IsNullOrEmpty(singleton.TargetConnector))
        {
            await displayMessage.DisplayErrorMessage("Please select a data connector");
            navigationManager.NavigateTo("/");
        }
        taxonomies = await createIndex.GetTaxonomies();

        source = singleton.TargetConnector;

        connectParameters = await dataSources.GetSources();
        foreach (ConnectParameters conn in connectParameters)
        {
            options.Add(conn.SourceName);
        }


    }

    private void Selected(string selectedString)
    {
        TaxonomyFile = selectedString;
    }

    protected async Task StartIndex()
    {
        progress("Starting indexing...");
        iParameters = new CreateIndexParameters();
        iParameters.Taxonomy = TaxonomyFile;
        iParameters.TargetName = singleton.TargetConnector;
        iParameters.SourceName = source;

        barValue = 1;
        progress("Starting indexing...");
        try
        {
            DateTime timeStart = DateTime.Now;
            await createIndex.Create(iParameters);
            DateTime timeEnd = DateTime.Now;
            TimeSpan diff = timeEnd - timeStart;
            Console.WriteLine($"Time span: {diff}");
            barValue = 100;
            progress("Indexing complete");
        }
        catch (Exception ex)
        {
            progress($"Error indexing: {ex.Message}");
            return;
        }

    }

    private void SelectedSource(string selectedString)
    {
        source = selectedString;
    }

    private void progress(string message)
    {
        statusMessage = message;
        StateHasChanged();
    }
}
