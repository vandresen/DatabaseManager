@using MudBlazor

<div>
    <MudSelect T="string" Label="Visible Columns" MultiSelection="true" OnClose="Selected" @bind-Value="value" @bind-SelectedValues="SelectedColumns" Variant="Variant.Filled">
        @foreach (var col in AvailableColumns)
        {
            <MudSelectItem T="string" Value="@col">@col</MudSelectItem>
        }
    </MudSelect>
</div>

@code {
    [Parameter] public string[] AvailableColumns { get; set; }
    [Parameter] public IEnumerable<string> SelectedColumns { get; set; }
    [Parameter] public EventCallback<string> Selections { get; set; }
    private string value { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Console.WriteLine($"OnInitializedAsync SelectColumns Avaialble columns");
        foreach (var col in AvailableColumns)
        {
            Console.WriteLine(col);
        }

        Console.WriteLine($"OnInitializedAsync SelectColumns Selected columns");
        foreach (var col in SelectedColumns)
        {
            Console.WriteLine(col);
        }
    }

    private async Task Selected()
    {
        string selectedString = value;
        Console.WriteLine($"Select Columns: {value}");
        await Selections.InvokeAsync(selectedString);
    }
}
