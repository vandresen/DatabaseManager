@using MudBlazor

@if (options == null)
{
    <text>Loading...</text>
}
else
{
    <EditForm Model="TransferParms" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator />
        <div class="form-group">
            <MudSelect T="string" Label="Source:" @bind-Value="TransferParms.SourceName" Variant="Variant.Outlined">
                @foreach (var option in options)
                {
                    <MudSelectItem T="string" Value="@option">@option</MudSelectItem>
                }
            </MudSelect>
        </div>
        <div class="form-group">
            <MudSelect T="string" Label="Target:" @bind-Value="TransferParms.TargetName" Variant="Variant.Outlined">
                @foreach (var option in options)
                {
                    <MudSelectItem T="string" Value="@option">@option</MudSelectItem>
                }
            </MudSelect>
        </div>
        <button class="btn btn-success" type="submit">Save Changes</button>
    </EditForm>
}

@code {
    [Parameter] public TransferParameters TransferParms { get; set; }
    [Parameter] public List<DatabaseManager.Shared.ConnectParameters> Connectors { get; set; }
    [Parameter] public EventCallback OnValidSubmit { get; set; }

    public string[] options { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            options = Connectors.Select(x => x.SourceName).ToArray();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Errors: {ex}");
        }
    }
}
